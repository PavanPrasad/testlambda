name: Deploy Lambda and API Gateway

on:
  push:
    branches:
      - main
      - dev
      - qa
      - prod

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  API_GW_ARN: "arn:aws:execute-api:us-east-1:094116700812:91l7n6grok"  # Corrected API Gateway ARN
  DEV_API_NAME: "DevHelloAPI"
  QA_API_NAME: "QaHelloAPI"
  PROD_API_NAME: "ProdHelloAPI"

jobs:
  deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: [dev, qa, prod]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          pip install awscli
          pip install boto3

      - name: Check if AWS CLI is already installed
        run: |
          if ! command -v aws &> /dev/null; then
            echo "AWS CLI not found, installing it now."
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            sudo ./aws/install
          else
            echo "AWS CLI already installed, skipping installation."
          fi

      - name: Deploy Lambda Function
        run: |
          zip function.zip lambda/lambda_function.py
          aws lambda update-function-code --function-name "HelloWorldFunction-${{ matrix.environment }}" --zip-file fileb://function.zip --region ${{ env.AWS_REGION }}

      - name: Update API Gateway
        run: |
          # Extracting the stage name from the environment (dev, qa, or prod)
          STAGE="${{ matrix.environment }}"
          
          # Update API Gateway to use the latest Lambda function ARN
          aws apigateway put-integration \
            --rest-api-id 91l7n6grok \
            --resource-id $(aws apigateway get-resources --rest-api-id 91l7n6grok --query 'items[?pathPart==`hello`].id' --output text) \
            --http-method GET \
            --type AWS_PROXY \
            --integration-http-method POST \
            --uri arn:aws:apigateway:${{ env.AWS_REGION }}:lambda:path/2015-03-31/functions/arn:aws:lambda:${{ env.AWS_REGION }}:094116700812:function:HelloWorldFunction-${{ matrix.environment }}:invocations \
            --region ${{ env.AWS_REGION }}

          # Deploy API Gateway to the specified stage (dev, qa, or prod)
          aws apigateway create-deployment \
            --rest-api-id 91l7n6grok \
            --stage-name $STAGE \
            --region ${{ env.AWS_REGION }}

      - name: Add Lambda Permissions to API Gateway
        run: |
          aws lambda add-permission --function-name HelloWorldFunction-${{ matrix.environment }} --principal apigateway.amazonaws.com --statement-id "API-Gateway-Permission-${{ matrix.environment }}" --action "lambda:InvokeFunction" --region ${{ env.AWS_REGION }}

      - name: Output API Gateway URL
        run: |
          API_URL="https://91l7n6grok.execute-api.${{ env.AWS_REGION }}.amazonaws.com/${{ matrix.environment }}/hello"
          echo "Deployed API is available at: $API_URL"
